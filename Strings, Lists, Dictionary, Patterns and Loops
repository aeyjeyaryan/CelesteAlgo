{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNpDkIx226mUStVsYzVhDIl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aeyjeyaryan/Python_ML/blob/main/Strings%2C%20Lists%2C%20Dictionary%2C%20Patterns%20and%20Loops\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "s0yHM7sKoHaT",
        "outputId": "d3b9c857-5a4a-4817-cddd-376afd750837",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the word : aryan\n",
            "2\n",
            "3\n"
          ]
        }
      ],
      "source": [
        "x=str(input(\"enter the word : \"))\n",
        "vowels = \"aeiouAEIOU\"\n",
        "consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n",
        "no_of_const = 0\n",
        "no_of_vowel = 0\n",
        "for i in x:\n",
        "  if i in vowels:\n",
        "    no_of_vowel += 1\n",
        "\n",
        "  elif i in consonants:\n",
        "      no_of_const += 1\n",
        "\n",
        "print(no_of_vowel)\n",
        "print(no_of_const)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = (\"aryan\", \"subham\", \"shyam\")\n",
        "print(type(a))\n",
        "print(a)\n",
        "print(a[-1])\n",
        "#dictionaries\n",
        "dict = {\"ram\" : \"boy\", \"sita\" : \"girl\"}\n",
        "print(dict)\n",
        "#set\n",
        "set1 = set([\"apple\",\"banana\",\"strawberry\"])\n",
        "print (set1)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dz7gEVrAPp4t",
        "outputId": "6a143ae3-7b93-411e-a269-1397815a2543"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'tuple'>\n",
            "('aryan', 'subham', 'shyam')\n",
            "shyam\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = ()\n",
        "print(type(a))"
      ],
      "metadata": {
        "id": "9E_97GVjX4K2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=str(input(\"do you want to convert capital to small or small to capital or special?: \"))\n",
        "if x == \"capital to small\":\n",
        "    capital=str(input(\"enter the word to make capital : \"))\n",
        "    print(capital.upper())\n",
        "elif x == \"small to capital\":\n",
        "    small=str(input(\"enter the word to make small : \"))\n",
        "    print(small.lower())\n",
        "elif x == \"special\":\n",
        "     special=(input(\"enter the special character : \"))\n",
        "     print(\"special character is #\")\n",
        "else:\n",
        "    print(\"not defined\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z5eI57Cc0spO",
        "outputId": "ab2020fa-fe9f-4926-8b29-8468a65e93c7"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "do you want to convert capital to small or small to capital or special?: capital to small\n",
            "enter the word to make capital : aryan\n",
            "ARYAN\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = 1234\n",
        "x%10"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eV-cbTt_Bfz6",
        "outputId": "0db75d50-7806-4e65-a600-cf1b49257da0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = (1,2,3,4,5)\n",
        "b=list(x)\n",
        "a = list(input(\"enter the values for the list :\"))\n",
        "for i in b:\n",
        "    if i == 2:\n",
        "        c=b.index(i)\n",
        "        b[c]=list(a)\n",
        "x=tuple(b)\n",
        "print(x)"
      ],
      "metadata": {
        "id": "OxE5_hO6WGhv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "nm=\"harry\"\n",
        "print(nm[-4:-2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2g32zUV7ulon",
        "outputId": "6b6a9696-cd5e-49ee-d265-65e9e67b2aa7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ar\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=\"string\"\n",
        "print(x[::-1])\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V0pZmLn_9JrS",
        "outputId": "6c90a112-5d9b-488c-a993-768de2ca546b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "gnirts\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = \"string\"\n",
        "for index, i in enumerate(x):\n",
        "  print(index, i)"
      ],
      "metadata": {
        "id": "4louIpK_o4u2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e811e45b-ce41-40a3-a66f-bcb79ec77f13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0 s\n",
            "1 t\n",
            "2 r\n",
            "3 i\n",
            "4 n\n",
            "5 g\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=eval(input(\"enter the number of rows : \"))\n",
        "for i in range(1,x+1):\n",
        "    for j in range(x-i):\n",
        "        print(' ', end=\" \")\n",
        "    for k in range(2*i-1):\n",
        "    print(\"*\", end=\" \")\n",
        "    print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "POpvfwlWAYBq",
        "outputId": "d5561711-9ebd-48d2-c167-44744f569d57"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number of rows : 5\n",
            "        * \n",
            "      * * * \n",
            "    * * * * * \n",
            "  * * * * * * * \n",
            "* * * * * * * * * \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "rows = 5\n",
        "for i in range(1, rows + 1):\n",
        "    for j in range(1, i + 1):\n",
        "        print(j, end=' ')\n",
        "    print()\n",
        "\n",
        "row = 5\n",
        "for i in range(1, row+1):\n",
        "    for j in range(1, i+1):\n",
        "        print(\"*\", end=' ')\n",
        "    print()\n",
        "\n",
        "\n",
        "x = 5\n",
        "for i in range(1, row+1):\n",
        "    for j in range(1, i+1):\n",
        "        print(\"*\", end=\" \")\n",
        "        print(\" \",end=' ')\n",
        "    print()\n",
        "for i in (x,0,-1):\n",
        "    for j in(1, i+1):\n",
        "        print(\"*\", end=\" \")\n",
        "    print()"
      ],
      "metadata": {
        "id": "OtsTG5th1phH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d663ad51-dedc-45fe-b0c5-3a16ba6f05e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 \n",
            "1 2 \n",
            "1 2 3 \n",
            "1 2 3 4 \n",
            "1 2 3 4 5 \n",
            "* \n",
            "* * \n",
            "* * * \n",
            "* * * * \n",
            "* * * * * \n",
            "*   \n",
            "*   *   \n",
            "*   *   *   \n",
            "*   *   *   *   \n",
            "*   *   *   *   *   \n",
            "* * \n",
            "* * \n",
            "* * \n"
          ]
        }
      ]
    }
  ]
}